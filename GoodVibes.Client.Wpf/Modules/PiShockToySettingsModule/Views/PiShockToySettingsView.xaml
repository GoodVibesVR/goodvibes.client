<UserControl x:Class="GoodVibes.Client.Wpf.Modules.PiShockToySettingsModule.Views.PiShockToySettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:core1="clr-namespace:GoodVibes.Client.Core;assembly=GoodVibes.Client.Core"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}" x:Key="PiShockTriggerButton">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="Transparent" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" Padding="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="Background" Value="#f4d600" />-->
                    <Setter Property="BorderBrush" Value="#f4d600" />
                </Trigger>
                <Trigger Property="IsMouseCaptureWithin" Value="True">
                    <Setter Property="Background" Value="#f4d600" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ScaleTransform x:Key="windowScaleTransform" ScaleX="1.4" ScaleY="1.4" />
        <ControlTemplate TargetType="{x:Type Slider}" x:Key="gauge">
            <Grid Background="{TemplateBinding Background}">

                <Canvas Margin="0" Width="240" Height="120">
                    <Grid Width="210" Height="210" VerticalAlignment="Bottom" Margin="16">
                        <Ellipse Stroke="#1e1e1e" StrokeThickness="20" Width="210" Height="210" >
                            <Ellipse.Clip>
                                <RectangleGeometry Rect="0,0,210,104" />
                            </Ellipse.Clip>
                        </Ellipse>
                    </Grid>

                    <!-- Gauge Bar -->
                    <Grid Width="200" Height="200" Margin="21" >
                        <Grid.Clip>
                            <RectangleGeometry Rect="0,100,200,100" >
                                <RectangleGeometry.Transform>
                                    <RotateTransform Angle="{Binding Path=Value,RelativeSource={RelativeSource Mode=TemplatedParent}}" CenterX="100" CenterY="100" />
                                </RectangleGeometry.Transform>
                            </RectangleGeometry>
                        </Grid.Clip>

                        <Ellipse StrokeThickness="10" Width="200" Height="200" >
                            <Ellipse.Stroke>
                                <SolidColorBrush Opacity="0.8" Color="#f4d600" />
                            </Ellipse.Stroke>
                            <Ellipse.Clip>
                                <RectangleGeometry Rect="0,0,200,99" />
                            </Ellipse.Clip>
                        </Ellipse>
                    </Grid>
                </Canvas>
            </Grid>
        </ControlTemplate>

        <Style x:Key="SliderRepeatButton_pink" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="#f4d600" BorderThickness="0" BorderBrush="White" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border BorderBrush="White" BorderThickness="0" Background="White" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb_Pink" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <!--Add name to ellipse to use in  controltemplate triggers-->
                        <Ellipse x:Name="Ellipse" Height="10" Width="10" Fill="White"></Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Ellipse" Property="Fill" Value="#f4d600"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider_Pink"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton_pink}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb_Pink}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider_Pink" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider_Pink}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Rectangle>
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1" Opacity="1">
                    <GradientStop Color="#3C5C8C" Offset="0" />
                    <GradientStop Color="#3C5C8C" Offset="1" />
                </LinearGradientBrush>
            </Rectangle.Fill>
            <Rectangle.OpacityMask>
                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1" Opacity="0.8">
                    <GradientStop Color="Transparent" Offset="-1.2" />
                    <GradientStop Color="#3C5C8C" Offset="1" />
                </LinearGradientBrush>
            </Rectangle.OpacityMask>
        </Rectangle>
        <StackPanel Margin="10 40 10 10">
            <TextBlock Text="{Binding DisplayName}"
                   Foreground="White"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   FontSize="24"/>
            <StackPanel HorizontalAlignment="Center" 
                    VerticalAlignment="Top"
                    Orientation="Horizontal"
                    Margin="0,0,0,0">
                <StackPanel HorizontalAlignment="Center" 
                            VerticalAlignment="Top"
                            Orientation="Vertical"
                            Margin="0,0,0,0">
                    <!--
                    <Slider Template="{StaticResource ResourceKey=gauge}" HorizontalAlignment="Center" LayoutTransform="{StaticResource windowScaleTransform}"
                Minimum="0" Maximum="180" Value="{Binding Path=Value,ElementName=sl}" 
                TextBlock.FontSize="20">
                    </Slider> -->

                    <Canvas Width="340" Height="180">
                        <Slider Template="{StaticResource ResourceKey=gauge}" HorizontalAlignment="Center" LayoutTransform="{StaticResource windowScaleTransform}"
                Minimum="0" Maximum="180" Value="{Binding Path=IntensityGauge}" 
                TextBlock.FontSize="20">
                        </Slider>
                        <Rectangle Width="128" Height="128" Canvas.Left="110" Canvas.Top="60">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/GoodVibes;component/Resources/pishock_logo.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Canvas>

                    <TextBlock Text="INTENSITY"
                           Foreground="White"
                           HorizontalAlignment="Center"
                           FontWeight="SemiBold"
                           FontSize="26"/>
                    <Slider Style="{StaticResource Horizontal_Slider_Pink}" 
                                        x:Name="sl"
                                        Maximum="100" 
                                        VerticalAlignment="Center" 
                                        Width="180" 
                                        Margin="5,0,5,0"
                                        Value="{Binding Path=Intensity}"
                                        TickPlacement="BottomRight" 
                                        IsSnapToTickEnabled="True"
                                        TickFrequency="1"/>
                    <StackPanel HorizontalAlignment="Center" 
                                VerticalAlignment="Top"
                                Orientation="Horizontal"
                                Margin="0,0,0,0">
                        <StackPanel HorizontalAlignment="Center" 
                                        VerticalAlignment="Top"
                                        Orientation="Vertical"
                                        Margin="0,10,0,0">
                            <TextBlock Text="Duration"
                                           Foreground="White"
                                           HorizontalAlignment="Center"
                                           FontWeight="SemiBold"
                                           FontSize="12"/>
                            <Slider Style="{StaticResource Horizontal_Slider_Pink}" 
                                        Maximum="10" 
                                        VerticalAlignment="Center" 
                                        Width="100" 
                                        Margin="5,0,5,0" 
                                        Value="{Binding Path=Duration}"
                                        TickPlacement="BottomRight" 
                                        IsSnapToTickEnabled="True"
                                        TickFrequency="1"/>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" 
                                VerticalAlignment="Top"
                                Orientation="Horizontal"
                                Margin="0,20,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="2">
                                <Button Style="{DynamicResource PiShockTriggerButton }"
                                        Command="{ Binding ShockCommand }">
                                    <Rectangle Width="42" Height="42">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="/GoodVibes;component/Resources/button_pishock_shock.png"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                            </Grid>
                            <Grid Grid.Column="1" Margin="2">
                                <Button Style="{DynamicResource PiShockTriggerButton }"
                                        Command="{ Binding MiniShockCommand }">
                                    <Rectangle Width="42" Height="42">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="/GoodVibes;component/Resources/button_pishock_minishock.png"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                            </Grid>
                            <Grid Grid.Column="2" Margin="2">
                                <Button Style="{DynamicResource PiShockTriggerButton }"
                                        Command="{ Binding VibrateCommand }">
                                    <Rectangle Width="42" Height="42">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="/GoodVibes;component/Resources/button_pishock_vibrate.png"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                            </Grid>
                            <Grid Grid.Column="3" Margin="2">
                                <Button Style="{DynamicResource PiShockTriggerButton }"
                                        Command="{ Binding BeepCommand }">
                                    <Rectangle Width="42" Height="42">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="/GoodVibes;component/Resources/button_pishock_beep.png"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>

    </Grid>
</UserControl>
